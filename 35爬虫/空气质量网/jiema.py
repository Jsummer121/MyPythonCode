# -*- coding: utf-8 -*-
import execjs

a = ''

with open('index.js',encoding='utf-8') as f:
    js_data = f.read()

ctx = execjs.compile(js_data)

r = 'decodeData("{}")'.format(a)

print(ctx.eval(r))#默认的js引擎很很差，所以这里用到了nodejs引擎。


